// âœ… Updated rules for proper comment deletion - simplified version
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Posts collection - read for everyone, write for authorized users
    match /posts/{postId} {
      allow read: if true;
      allow write: if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateChannels == true;
      
      // Comments subcollection - read for everyone, write only for authenticated users
      match /comments/{commentId} {
    allow read: if true;

    // Allow creating new comment for any signed-in user
    allow create: if request.auth != null;

    // Allow updating/deleting only if user is the author or has role owner/mod
    allow update, delete: if request.auth != null
      && (
        request.auth.uid == resource.data.userId
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'mod']
      );
    }
  }
    
    // Posts index - read for everyone, write for authorized users
    match /postsIndex/{postId} {
      allow read: if true;
      allow write: if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateChannels == true;
    }
    
    // Channels collection - read for everyone, write for authorized users
    match /channels/{channelId} {
      allow read: if true;
      allow write: if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateChannels == true;
      
      // Channel posts subcollection - read for everyone, write for authorized users
      match /posts/{postId} {
        allow read: if true;
        allow write: if request.auth != null 
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateChannels == true;
      }
    }
    
    // Tags collection - read for everyone, write for authorized users
    match /tags/{tagId} {
      allow read: if true;
      allow write: if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateChannels == true;
      
      // Tag posts subcollection - read for everyone, write for authorized users
      match /posts/{postId} {
        allow read: if true;
        allow write: if request.auth != null 
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateChannels == true;
      }
    }
    
    // Users collection - read only for everyone (for public profile info)
    match /users/{userId} {
      allow read: if true;
      allow write: if false;
    }
    
    // Catch-all rule - deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
